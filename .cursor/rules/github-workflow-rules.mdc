---
description: 
globs: 
alwaysApply: false
---
 ---
description: GitHubワークフローとリリース管理
globs: "*"
alwaysApply: true
---

# GitHubワークフローとリリース管理

## ブランチ戦略

- **main**: 本番環境へのデプロイに使用される安定ブランチ
- **develop**: 開発環境のベースブランチ，すべての開発はここからブランチを作成
- **feature/\***: 新機能開発用
- **fix/\***: バグ修正用
- **release/\***: リリース準備用

## 開発フロー

1. **機能開発**:
   - `develop`から`feature/<機能名>`ブランチを作成
   - 開発完了後，`develop`へプルリクエスト
   - コードレビュー後にマージ

2. **バグ修正**:
   - `develop`から`fix/<バグ名>`ブランチを作成
   - 修正後，`develop`へプルリクエスト
   - コードレビュー後にマージ

3. **リリース準備**:
   - `develop`から`release/v<バージョン>`ブランチを作成
   - QAテスト実施
   - バグ修正があれば`release`ブランチ上で対応
   - 準備完了後，`main`へプルリクエスト

4. **リリース**:
   - `main`へのマージ時にタグ付け（`v1.0.0`形式）
   - リリースノート作成
   - `main`の変更を`develop`へ反映

## バージョニング

[セマンティックバージョニング](https://semver.org/lang/ja/)に従います：

- **MAJOR**: 互換性のない変更
- **MINOR**: 後方互換性のある機能追加
- **PATCH**: 後方互換性のあるバグ修正

## CI/CDパイプライン

- プルリクエスト作成時: ビルド，テスト，Lint
- `main`へのマージ時: ビルド，テスト，デプロイ

## Issue管理

- バグ報告，機能リクエスト，タスク管理はIssueで行う
- テンプレートを活用し，詳細な情報を記載
- 関連するPRはIssue番号を参照する